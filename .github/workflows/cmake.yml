name: CMake

on:
  push:
    branches: [ github ]
  pull_request:
    branches: [ github ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [linux, windows]

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build 

    - name: Build & install
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Prepare Test
      working-directory: ${{github.workspace}}/test
      run: mv cut-down-test.log reference.log

  test-linux:
    runs-on: linux
    needs: build

    steps:
    - name: Run Test
      working-directory: ${{github.workspace}}/test
      run: stata -e -q cut-down-test.do

    - name: Check Test Results
      working-directory: ${{github.workspace}}/test
      run: diff -B reference.log cut-down-test.log

  test-windows:
    runs-on: windows
    needs: build

    steps:
    - name: Run Test
      working-directory: ${{github.workspace}}/test
      run: cmd.exe /c "C:\Program Files\Stata17\StataMP-64.exe" -e -q cut-down-test.do

    - name: Check Test Results
      working-directory: ${{github.workspace}}/test
      run: cmd.exe /c "fc /W reference.log cut-down-test.log"
  
  build-and-test-mac-arm:
    runs-on: macos
    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: ARMMODE=1 VCPKG_TARGET_TRIPLET=arm64-osx env /usr/bin/arch -arm64 cmake -B ${{github.workspace}}/build 

    - name: Build & install
      run: ARMMODE=1 VCPKG_TARGET_TRIPLET=arm64-osx env /usr/bin/arch -arm64 cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Prepare Test
      working-directory: ${{github.workspace}}/test
      run: mv cut-down-test.log reference.log
    
    - name: Run Test
      working-directory: ${{github.workspace}}/test
      run: env /usr/bin/arch -arm64 /Applications/Stata/StataMP.app/Contents/MacOS/StataMP -e -q cut-down-test.do

    - name: Check Test Results
      working-directory: ${{github.workspace}}/test
      run: diff -B reference.log cut-down-test.log

  build-and-test-mac-x64:
    runs-on: macos
    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: env /usr/bin/arch -x86_64 cmake -B ${{github.workspace}}/build 

    - name: Build & install
      run: env /usr/bin/arch -x86_64 cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Prepare Test
      working-directory: ${{github.workspace}}/test
      run: mv cut-down-test.log reference.log
    
    - name: Run Test
      working-directory: ${{github.workspace}}/test
      run: env /usr/bin/arch -x86_64 /Applications/Stata/StataMP.app/Contents/MacOS/StataMP -e -q cut-down-test.do

    - name: Check Test Results
      working-directory: ${{github.workspace}}/test
      run: diff -B reference.log cut-down-test.log